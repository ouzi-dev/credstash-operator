# Default values for credstash-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/ouzi/credstash-operator
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Specifies which namespace to watch for CRDs defaults to all namespaces
namespaceToWatch:
# Specifies which operatorInstance to filter the CRDs - defaults to all CRDs. 
# Use this if you wish to deploy multiple controllers, each using a different AWS config for example
operatorInstance: 

awsCredentials:
  create: false
  # Annotations to add to the secret
  annotations: {}
  secretName:
  awsAccessKeyId:
  awsSecretAccessKey:
  awsRegion:

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  # Specifies whether rbac resources should be created
  create: true
  # Annotations to add to the role and binding
  annotations: {}
  # The name of the rbac Role to use.
  # If not set and create is true, a name is generated using the fullname template
  roleName:
  # The name of the rbac RoleBinding to use.
  # If not set and create is true, a name is generated using the fullname template
  roleBindingName:

crds:
  # Specifies whether the customresourcedefinitions should be created
  create: true

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
